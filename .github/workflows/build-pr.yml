name: Build & Tests - PR

on:
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven

    - name: Build & test with Maven
      run: mvn -B package --file pom.xml

  publish-job:
    runs-on: ubuntu-latest
    needs: [build-and-test]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - run: mvn -B package --file pom.xml -DskipTests
      - run: mkdir prod
      - run: cp commons/target/commons-0.0.1-SNAPSHOT.jar prod
      - run: cp consumer-microservice/target/consumer-microservice-0.0.1-SNAPSHOT.jar prod
      - run: cp email-api/target/email-api-0.0.1-SNAPSHOT.jar prod
      - run: cp subs-api/target/subs-api-0.0.1-SNAPSHOT.jar prod
      - uses: actions/upload-artifact@v3
        with:
          name: Package
          path: prod

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

#      - name: Build, tag & push image to Amazon ECR
#        env:
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          ECR_REPOSITORY: docker_ascan
#          IMAGE_TAG: ${{ github.sha }}
#        run: |
#          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
